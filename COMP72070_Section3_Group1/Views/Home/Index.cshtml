@{
    ViewData["Title"] = "Astro";
}
@model List<COMP72070_Section3_Group1.Models.Post>


<div class accesskey="post-wrapper">
    @foreach (var post in Model)
    {
        <div class="post-container">
            <!-- Dynamically set the image source, alt text, and other attributes based on the post's properties -->
            @if (!string.IsNullOrEmpty(post.imageName))
            {
                <img src="/images/@post.imageName" alt="Image description"
                    onerror="this.onerror=null; this.src='/images/placeholder_image.jpg';">
            }

            <!-- Display the post content -->
            <p class="middle-paragraph">@post.content</p>

            <div class="bottom-section">
                <div class="left-element">
                    <!-- Display the username (author) -->
                    <a class="username" href="#">Author: @post.author</a>
                </div>
                <div class="right-elements">
                    <!-- Star (Like) and Comment buttons -->
                    <a href="#" class="star-btn-wrapper" style="position: relative;">
                        <img class="star-button" src="/images/star-regular.svg" alt="Star">
                    </a>
                    <a href="#"><img class="comment-button" src="/images/comment-regular.svg" alt="Comment"></a>
                </div>
            </div>
        </div>
    }
</div>

<div id="commentModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Comments</h2>
        <div id="commentsList">
            <!-- list -->
        </div>
        <h3>Add a Comment</h3>
        <form id="commentForm">
            <textarea id="commentText" placeholder="Your comment..."></textarea>
            <button type="submit">Submit</button>
        </form>
    </div>
</div>


<style>
    body {
        margin: 0;
        padding: 0;
    }

    .post-container {
        text-align: center;
        padding: 50px;
        background-color: white;
        border-radius: 5%;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        margin: 0 auto 40px;
        max-width: 80%;
        max-height: 70%;
    }

    .post-container img {
        max-width: 100%;
        max-height: 100%;
        height: auto;
        margin-bottom: 10px;
        border-radius: 5%;
    }

    h1 {
        color: #333;
        font-family: 'Arial', sans-serif;
    }

    .middle-paragraph {
        text-align: left;
        padding: 10px;
    }

    .bottom-section {
        display: flex;
        justify-content: space-between;
        margin-top: 10px;
    }

    .left-element {
        flex-grow: 1;
        text-align: left;
        padding: 10px;
    }

    .username {
        display: inline;
        text-decoration: none;
        color: black;
        transition: color 0.3s ease;
    }

    .username:hover {
        color: gray;
        text-decoration: underline;
    }

    .right-elements {
        display: flex;
        align-items: center;
    }

    .right-elements img {
        width: 100px;
        height: 100px;
        margin-left: 20px;
    }

    .star-button,
    .comment-button {
        display: inline-block;
        padding: 10px 20px;
        font-size: 16px;
        color: black;
        border: 2px solid black;
        border-radius: 75px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin: 0 5px;
        max-width: 25%;
        max-height: 25%;
    }

    .star-button {
        background-color: lightyellow;
        margin-left: 20px;
    }

    .star-button:hover {
        background-color: yellow;
    }

    .comment-button {
        background-color: aliceblue;
        margin-left: 20px;
    }

    .comment-button:hover {
        background-color: #347ae3;
    }

    @@keyframes floatAndFade {
        0% {
            transform: translateY(0);
            opacity: 1;
        }

        100% {
            transform: translateY(-100px);
            opacity: 0;
        }
    }

    .floating-star {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(1);
        width: 25%;
        height: 25%;
        background-image: url('/images/star-regular.svg');
        background-size: contain;
        background-repeat: no-repeat;
        animation: floatAndFade 1s ease-out forwards;
    }

    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content */
    .modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
    }

    /* The Close Button */
    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    #commentsList {
        max-height: 300px;
        overflow-y: auto;
    }

    #commentForm {
        margin-top: 20px;
    }

    #commentText {
        width: 100%;
        margin-bottom: 10px;
    }
}
</style>

<script>
 document.addEventListener("DOMContentLoaded", function () {
    // Star button effect
    document.querySelectorAll('.star-btn-wrapper').forEach(button => {
        button.addEventListener('click', function (e) {
            e.preventDefault();
            var floatingStar = document.createElement('div');
            floatingStar.classList.add('floating-star');
            this.appendChild(floatingStar);
            setTimeout(() => {
                floatingStar.remove();
            }, 1000); 
        });
    });
});
</script>


<!-- comment script-->
 <script>
    document.addEventListener("DOMContentLoaded", function () {
        // Existing star button logic...

        // Comment button modal display
        document.querySelectorAll('.comment-button').forEach(button => {
            button.addEventListener('click', function (e) {
                e.preventDefault();
                var modal = document.getElementById('commentModal');
                modal.style.display = "block";

                // Load comments for this post here
                // You will need to identify the post whose comments button was clicked
                // and load the appropriate comments into '#commentsList'
            });
        });

        // When the user clicks on <span> (x), close the modal
        document.querySelector('.close').addEventListener('click', function () {
            var modal = document.getElementById('commentModal');
            modal.style.display = "none";
        });

        // Handle modal form submission here
        document.getElementById('commentForm').addEventListener('submit', function (e) {
            e.preventDefault();
            var commentText = document.getElementById('commentText').value;
            // Implement comment submission logic here
            // Reset the form after submission
            document.getElementById('commentForm').reset();
            // Close the modal or refresh comments list as needed
        });

        // Clicking outside of the modal closes it
        window.onclick = function (event) {
            var modal = document.getElementById('commentModal');
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
    });
 </script>